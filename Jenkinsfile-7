/* Second pipeline, Task 3, step 1 */

pipeline {
    agent any
    tools {
        maven 'maven'
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('jacek-docker') // This only retrieves the ID, not the actual credentials
    }
    stages {
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }
        stage('Deploy') {
            steps {
                sh 'mvn package'
            }
        }
        stage('Docker Build') {
            steps {
                sh "docker build -t jacekcracow/abctechnologies-latest:${BUILD_NUMBER} ." // Use double quotes for variable interpolation
            }
        }
        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'jacek-docker', usernameVariable: 'DOCKERHUB_CREDENTIALS_USR', passwordVariable: 'DOCKERHUB_CREDENTIALS_PSW')]) { // Correct way to use credentials
                    sh "echo \$DOCKERHUB_CREDENTIALS_PSW | docker login -u \$DOCKERHUB_CREDENTIALS_USR --password-stdin" // Escape $ for shell
                }
            }
        }
        stage('Docker Push') {
            steps {
                sh "docker push jacekcracow/abctechnologies-latest:${BUILD_NUMBER}" // Use double quotes for variable interpolation
            }
        }
        stage('Build and publish with Ansible') {
    steps {
        script {
            withCredentials([usernamePassword(credentialsId: 'jacek-docker', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                ansiblePlaybook(
                    playbook: 'docker_deploy4.yaml',
                    inventory: '/etc/ansible/hosts',
                    extraVars: [  // Use a Map for extraVars
                        docker_username: USERNAME,  // Correct syntax for Map
                        docker_password: PASSWORD
                    ]
                )
            }
        }
    }
}
