---
- name: Docker deploy
  hosts: Docker
  become: true
  vars:
    docker_image_name: "jacekcracow/abctechnologies_with_ansible"
    build_number: "{{ lookup('env', 'BUILD_NUMBER') | default('v1') }}"
    dockerhub_user: "{{ lookup('env', 'DOCKERHUB_CREDENTIALS_USR') | default('jacekcracow') }}"
    dockerhub_password: "{{ lookup('env', 'DOCKERHUB_CREDENTIALS_PSW') | default('!a5eSv$E5Wc?M7R') }}" # SECURE THIS!
    container_port: 8080
    host_port: 8071

  tasks:
    - name: Log into DockerHub
      community.docker.docker_login:
        username: "{{ dockerhub_user }}"
        password: "{{ dockerhub_password }}"
        reauthorize: true

    - name: Build Docker image
      community.docker.docker_image:
        name: "{{ docker_image_name }}"
        tag: "{{ build_number }}"
        source: build
        push: true
        build:
          path: .  # Use the current directory
          dockerfile: Dockerfile

    - name: Stop old Docker container if it exists
      community.docker.docker_container:
        name: myfirstapp
        state: absent
        ignore_errors: true

    - name: Remove Docker image if it exists
      community.docker.docker_image:
        name: "{{ docker_image_name }}"
        tag: "{{ build_number }}"
        state: absent
        ignore_errors: true

    - name: Create and start Docker container
      community.docker.docker_container:
        name: myfirstapp
        image: "{{ docker_image_name }}:{{ build_number }}"
        state: started
        restart_policy: unless-stopped
        ports:
          - "{{ host_port }}:{{ container_port }}"

    - name: Log out of DockerHub
      community.docker.docker_login:
        state: absent
